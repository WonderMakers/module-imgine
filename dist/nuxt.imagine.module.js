!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var o=t();for(var i in o)("object"==typeof exports?exports:e)[i]=o[i]}}(global,(()=>(()=>{"use strict";var e={d:(t,o)=>{for(var i in o)e.o(o,i)&&!e.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:o[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{default:()=>r});const o=require("./options"),i=require("path");function r(e={}){const{nuxt:t}=this,r=Object.assign({},o,this.options.imgine,e);if(r.useLoader&&this.extendBuild(((e,{isClient:t,isServer:o})=>{const i=e.module.rules.find((e=>e.test.test(".png")&&e.test.test(".jpg")&&e.test.test(".gif")&&e.test.test(".webp")&&e.test.test(".svg")));if(!i)throw new Error(["Could not find the existing image loader rule."," The webpack config has been edited, perhaps by another Nuxt module."," To resolve this error try placing this module first in your Nuxt modules array"," or use a custom webpack configuration instead."].join(""));i&&(i.test=/\.(svg|gif)$/i),e.module.rules.push({test:/\.(png|jpe?g|webp)$/,loader:"imgine/loader"})})),this.addPlugin({src:i.resolve(__dirname,"nuxt.imagine.plugin.js"),fileName:"imagine.plugin.js",options:r}),!1===t.options.dev)return;const s=require("./server.middleware");this.addServerMiddleware(s(r))}return t})()));